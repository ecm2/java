{"remainingRequest":"E:\\实验\\vuepress\\code_heavy_industry\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\实验\\vuepress\\code_heavy_industry\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!E:\\实验\\vuepress\\code_heavy_industry\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!E:\\实验\\vuepress\\code_heavy_industry\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!E:\\实验\\vuepress\\code_heavy_industry\\docs\\pro004-Spring\\lecture\\chapter03\\verse03\\experiment04.md?vue&type=template&id=007e343a&","dependencies":[{"path":"E:\\实验\\vuepress\\code_heavy_industry\\docs\\pro004-Spring\\lecture\\chapter03\\verse03\\experiment04.md","mtime":1626510876000},{"path":"E:\\实验\\vuepress\\code_heavy_industry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626510876000},{"path":"E:\\实验\\vuepress\\code_heavy_industry\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1626510876000},{"path":"E:\\实验\\vuepress\\code_heavy_industry\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1626510876000},{"path":"E:\\实验\\vuepress\\code_heavy_industry\\node_modules\\vue-loader\\lib\\index.js","mtime":1626510876000},{"path":"E:\\实验\\vuepress\\code_heavy_industry\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1626510876000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
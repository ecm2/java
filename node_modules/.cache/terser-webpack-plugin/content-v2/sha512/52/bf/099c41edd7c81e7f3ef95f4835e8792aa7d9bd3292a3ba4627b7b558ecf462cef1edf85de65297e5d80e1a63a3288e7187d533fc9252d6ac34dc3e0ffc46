{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{438:function(t,a,s){\"use strict\";s.r(a);var e=s(44),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"p\",[t._v(\"[TOC]\")]),t._v(\" \"),s(\"h1\",{attrs:{id:\"第二节-三层架构\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第二节-三层架构\"}},[t._v(\"#\")]),t._v(\" 第二节 三层架构\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_1、三层架构划分\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、三层架构划分\"}},[t._v(\"#\")]),t._v(\" 1、三层架构划分\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"images/img008.png\",alt:\"images\"}})]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"表述层：负责处理浏览器请求、返回响应、页面调度\")]),t._v(\" \"),s(\"li\",[t._v(\"业务逻辑层：负责处理业务逻辑，根据业务逻辑把持久化层从数据库查询出来的数据进行运算、组装，封装好后返回给表述层，也可以根据业务功能的需要调用持久化层把数据保存到数据库、修改数据库中的数据、删除数据库中的数据\")]),t._v(\" \"),s(\"li\",[t._v(\"持久化层：根据上一层的调用对数据库中的数据执行增删改查的操作\")])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_2、三层架构好处\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、三层架构好处\"}},[t._v(\"#\")]),t._v(\" 2、三层架构好处\")]),t._v(\" \"),s(\"p\",[t._v(\"如果不做三层架构形式的拆分：\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"images/img009.png\",alt:\"images\"}})]),t._v(\" \"),s(\"p\",[t._v(\"所有和当前业务功能需求相关的代码全部耦合在一起，如果其中有任何一个部分出现了问题，牵一发而动全身，导致其他无关代码也要进行相应的修改。这样的话代码会非常难以维护。\")]),t._v(\" \"),s(\"p\",[t._v(\"所以为了提高开发效率，需要对代码进行模块化的拆分。整个项目模块化、组件化程度越高，越容易管理和维护，出现问题更容易排查。\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_3、三层架构和模型的关系\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、三层架构和模型的关系\"}},[t._v(\"#\")]),t._v(\" 3、三层架构和模型的关系\")]),t._v(\" \"),s(\"p\",[s(\"img\",{attrs:{src:\"images/img010.png\",alt:\"images\"}})]),t._v(\" \"),s(\"p\",[t._v(\"模型对整个项目中三层架构的每一层都提供支持，具体体现是使用模型对象\"),s(\"span\",{staticStyle:{color:\"blue\",\"font-weight\":\"bold\"}},[t._v(\"封装业务功能数据\")]),t._v(\"。\")]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"Java实体类有很多不同名称：\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"POJO：Plain old Java Object，传统的普通的Java对象\")]),t._v(\" \"),s(\"li\",[t._v(\"entity：实体类\")]),t._v(\" \"),s(\"li\",[t._v(\"bean或Java bean\")]),t._v(\" \"),s(\"li\",[t._v(\"domain：领域模型\")])])]),t._v(\" \"),s(\"h2\",{attrs:{id:\"_4、模型开发的要求\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4、模型开发的要求\"}},[t._v(\"#\")]),t._v(\" 4、模型开发的要求\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_1orm\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1orm\"}},[t._v(\"#\")]),t._v(\" ①ORM\")]),t._v(\" \"),s(\"p\",[t._v(\"ORM：Object Relative Mapping对象关系映射\")]),t._v(\" \"),s(\"p\",[t._v(\"对象：Java对象\")]),t._v(\" \"),s(\"p\",[t._v(\"关系：关系型数据库\")]),t._v(\" \"),s(\"p\",[t._v(\"映射：Java对象和数据库表之间的对应关系\")]),t._v(\" \"),s(\"table\",[s(\"thead\",[s(\"tr\",[s(\"th\",[t._v(\"Java类\")]),t._v(\" \"),s(\"th\",[t._v(\"数据库表\")])])]),t._v(\" \"),s(\"tbody\",[s(\"tr\",[s(\"td\",[t._v(\"类\")]),t._v(\" \"),s(\"td\",[t._v(\"表\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"属性\")]),t._v(\" \"),s(\"td\",[t._v(\"字段/列\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"对象\")]),t._v(\" \"),s(\"td\",[t._v(\"记录/行\")])]),t._v(\" \"),s(\"tr\",[s(\"td\",[t._v(\"属性按照驼峰式命名\")]),t._v(\" \"),s(\"td\",[t._v(\"字段名各个单词之间用下划线分开\")])])])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"_2java实体类的要求\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2java实体类的要求\"}},[t._v(\"#\")]),t._v(\" ②Java实体类的要求\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"必须有一个无参构造器\")]),t._v(\" \"),s(\"p\",[t._v(\"将来使用框架后，大量的对象都是框架通过反射来创建的。\")]),t._v(\" \"),s(\"p\",[t._v('Class<T> clazz = Class.forName(\"全类名\");')]),t._v(\" \"),s(\"p\",[t._v(\"clazz.newInstance();\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"通过getXxx()、setXxx()方法定义属性：getXxx()或setXxx()方法去掉get或set后，Xxx把首字母小写，得到的xxx就是属性名。\")])])]),t._v(\" \"),s(\"div\",{staticClass:\"language-java extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"User\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\n\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"private\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" safeUserName\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\\n\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getUserName\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"safeUserName\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\t\\n\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"public\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setUserName\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),s(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),t._v(\" userName\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n\\t\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"safeUserName \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" userName\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\t\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),s(\"p\",[t._v(\"在上面例子中，getXxx()、setXxx()方法定义的属性是userName，不是safeUserName。\")]),t._v(\" \"),s(\"p\",[s(\"RouterLink\",{attrs:{to:\"/pro001-javaweb/lecture/bookstore02/verse01.html\"}},[t._v(\"上一节\")]),t._v(\" \"),s(\"RouterLink\",{attrs:{to:\"/pro001-javaweb/lecture/bookstore02/index.html\"}},[t._v(\"回目录\")]),t._v(\" \"),s(\"RouterLink\",{attrs:{to:\"/pro001-javaweb/lecture/bookstore02/verse03.html\"}},[t._v(\"下一节\")])],1)])}),[],!1,null,null,null);a.default=v.exports}}]);","extractedComments":[]}
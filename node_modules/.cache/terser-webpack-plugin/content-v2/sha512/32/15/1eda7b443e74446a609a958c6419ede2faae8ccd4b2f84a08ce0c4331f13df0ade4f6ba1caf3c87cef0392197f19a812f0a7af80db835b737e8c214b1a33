{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[306],{706:function(a,_,v){\"use strict\";v.r(_);var t=v(44),e=Object(t.a)({},(function(){var a=this,_=a.$createElement,v=a._self._c||_;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[v(\"p\",[a._v(\"[TOC]\")]),a._v(\" \"),v(\"h1\",{attrs:{id:\"第七节-aop对获取bean的影响\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第七节-aop对获取bean的影响\"}},[a._v(\"#\")]),a._v(\" 第七节 AOP对获取bean的影响\")]),a._v(\" \"),v(\"h1\",{attrs:{id:\"一、根据类型获取bean\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、根据类型获取bean\"}},[a._v(\"#\")]),a._v(\" 一、根据类型获取bean\")]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_1、情景一\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、情景一\"}},[a._v(\"#\")]),a._v(\" 1、情景一\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"bean对应的类没有实现任何接口\")]),a._v(\" \"),v(\"li\",[a._v(\"根据bean本身的类型获取bean\\n\"),v(\"ul\",[v(\"li\",[v(\"p\",[a._v(\"测试：IOC容器中同类型的bean只有一个\")]),a._v(\" \"),v(\"p\",[a._v(\"正常获取到IOC容器中的那个bean对象\")])]),a._v(\" \"),v(\"li\",[v(\"p\",[a._v(\"测试：IOC容器中同类型的bean有多个\")]),a._v(\" \"),v(\"p\",[a._v(\"会抛出NoUniqueBeanDefinitionException异常，表示IOC容器中这个类型的bean有多个\")])])])])]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_2、情景二\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、情景二\"}},[a._v(\"#\")]),a._v(\" 2、情景二\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"bean对应的类实现了接口，这个接口也只有这一个实现类\\n\"),v(\"ul\",[v(\"li\",[a._v(\"测试：根据接口类型获取bean\")]),a._v(\" \"),v(\"li\",[a._v(\"测试：根据类获取bean\")]),a._v(\" \"),v(\"li\",[a._v(\"结论：上面两种情况其实都能够正常获取到bean，而且是同一个对象\")])])])]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_3、情景三\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、情景三\"}},[a._v(\"#\")]),a._v(\" 3、情景三\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"声明一个接口\")]),a._v(\" \"),v(\"li\",[a._v(\"接口有多个实现类\")]),a._v(\" \"),v(\"li\",[a._v(\"接口所有实现类都放入IOC容器\\n\"),v(\"ul\",[v(\"li\",[v(\"p\",[a._v(\"测试：根据接口类型获取bean\")]),a._v(\" \"),v(\"p\",[a._v(\"会抛出NoUniqueBeanDefinitionException异常，表示IOC容器中这个类型的bean有多个\")])]),a._v(\" \"),v(\"li\",[v(\"p\",[a._v(\"测试：根据类获取bean\")]),a._v(\" \"),v(\"p\",[a._v(\"正常\")])])])])]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_4、情景四\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4、情景四\"}},[a._v(\"#\")]),a._v(\" 4、情景四\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"声明一个接口\")]),a._v(\" \"),v(\"li\",[a._v(\"接口有一个实现类\")]),a._v(\" \"),v(\"li\",[a._v(\"创建一个切面类，对上面接口的实现类应用通知\\n\"),v(\"ul\",[v(\"li\",[a._v(\"测试：根据接口类型获取bean\")]),a._v(\" \"),v(\"li\",[a._v(\"测试：根据类获取bean\")])])])]),a._v(\" \"),v(\"p\",[a._v(\"原因分析：\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"应用了切面后，真正放在IOC容器中的是代理类的对象\")]),a._v(\" \"),v(\"li\",[a._v(\"目标类并没有被放到IOC容器中，所以根据目标类的类型从IOC容器中是找不到的\")])]),a._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"images/img021.png\",alt:\"images\"}})]),a._v(\" \"),v(\"p\",[a._v(\"从内存分析的角度来说，IOC容器中引用的是代理对象，代理对象引用的是目标对象。IOC容器并没有直接引用目标对象，所以根据目标类本身在IOC容器范围内查找不到。\")]),a._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"images/img022.png\",alt:\"images\"}})]),a._v(\" \"),v(\"p\",[a._v(\"debug查看代理类的类型：\")]),a._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"images/img025.png\",alt:\"images\"}})]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_5、情景五\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5、情景五\"}},[a._v(\"#\")]),a._v(\" 5、情景五\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"声明一个类\")]),a._v(\" \"),v(\"li\",[a._v(\"创建一个切面类，对上面的类应用通知\\n\"),v(\"ul\",[v(\"li\",[a._v(\"测试：根据类获取bean，能获取到\")])])])]),a._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"images/img023.png\",alt:\"images\"}})]),a._v(\" \"),v(\"p\",[a._v(\"debug查看实际类型：\")]),a._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"images/img024.png\",alt:\"images\"}})]),a._v(\" \"),v(\"h1\",{attrs:{id:\"二、自动装配\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、自动装配\"}},[a._v(\"#\")]),a._v(\" 二、自动装配\")]),a._v(\" \"),v(\"p\",[a._v(\"自动装配需先从IOC容器中获取到唯一的一个bean才能够执行装配。所以装配能否成功和装配底层的原理，和前面测试的获取bean的机制是一致的。\")]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_1、情景一-2\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、情景一-2\"}},[a._v(\"#\")]),a._v(\" 1、情景一\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"目标bean对应的类没有实现任何接口\")]),a._v(\" \"),v(\"li\",[a._v(\"根据bean本身的类型装配这个bean\\n\"),v(\"ul\",[v(\"li\",[v(\"p\",[a._v(\"测试：IOC容器中同类型的bean只有一个\")]),a._v(\" \"),v(\"p\",[a._v(\"正常装配\")])]),a._v(\" \"),v(\"li\",[v(\"p\",[a._v(\"测试：IOC容器中同类型的bean有多个\")]),a._v(\" \"),v(\"p\",[a._v(\"会抛出NoUniqueBeanDefinitionException异常，表示IOC容器中这个类型的bean有多个\")])])])])]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_2、情景二-2\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、情景二-2\"}},[a._v(\"#\")]),a._v(\" 2、情景二\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"目标bean对应的类实现了接口，这个接口也只有这一个实现类\\n\"),v(\"ul\",[v(\"li\",[v(\"p\",[a._v(\"测试：根据接口类型装配bean\")]),a._v(\" \"),v(\"p\",[a._v(\"正常\")])]),a._v(\" \"),v(\"li\",[v(\"p\",[a._v(\"测试：根据类装配bean\")]),a._v(\" \"),v(\"p\",[a._v(\"正常\")])])])])]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_3、情景三-2\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3、情景三-2\"}},[a._v(\"#\")]),a._v(\" 3、情景三\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"声明一个接口\")]),a._v(\" \"),v(\"li\",[a._v(\"接口有多个实现类\")]),a._v(\" \"),v(\"li\",[a._v(\"接口所有实现类都放入IOC容器\\n\"),v(\"ul\",[v(\"li\",[v(\"p\",[a._v(\"测试：根据接口类型装配bean\")]),a._v(\" \"),v(\"p\",[a._v(\"@Autowired注解会先根据类型查找，此时会找到多个符合的bean，然后根据成员变量名作为bean的id进一步筛选，如果没有id匹配的，则会抛出NoUniqueBeanDefinitionException异常，表示IOC容器中这个类型的bean有多个\")])]),a._v(\" \"),v(\"li\",[v(\"p\",[a._v(\"测试：根据类装配bean\")]),a._v(\" \"),v(\"p\",[a._v(\"正常\")])])])])]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_4、情景四-2\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4、情景四-2\"}},[a._v(\"#\")]),a._v(\" 4、情景四\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"声明一个接口\")]),a._v(\" \"),v(\"li\",[a._v(\"接口有一个实现类\")]),a._v(\" \"),v(\"li\",[a._v(\"创建一个切面类，对上面接口的实现类应用通知\\n\"),v(\"ul\",[v(\"li\",[v(\"p\",[a._v(\"测试：根据接口类型装配bean\")]),a._v(\" \"),v(\"p\",[a._v(\"正常\")])]),a._v(\" \"),v(\"li\",[v(\"p\",[a._v(\"测试：根据类装配bean\")]),a._v(\" \"),v(\"p\",[a._v(\"此时获取不到对应的bean，所以无法装配，抛出下面的异常：\")])])])])]),a._v(\" \"),v(\"blockquote\",[v(\"p\",[a._v(\"Caused by: org.springframework.beans.factory.BeanNotOfRequiredTypeException: Bean named 'fruitApple' is expected to be of type 'com.atguigu.bean.impl.FruitAppleImpl' but was actually of type 'com.sun.proxy.$Proxy15'\")])]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_5、情景五-2\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5、情景五-2\"}},[a._v(\"#\")]),a._v(\" 5、情景五\")]),a._v(\" \"),v(\"ul\",[v(\"li\",[a._v(\"声明一个类\")]),a._v(\" \"),v(\"li\",[a._v(\"创建一个切面类，对上面的类应用通知\\n\"),v(\"ul\",[v(\"li\",[v(\"p\",[a._v(\"测试：根据类装配bean\")]),a._v(\" \"),v(\"p\",[a._v(\"正常\")])])])])]),a._v(\" \"),v(\"h1\",{attrs:{id:\"三、总结\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、总结\"}},[a._v(\"#\")]),a._v(\" 三、总结\")]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_1、对实现了接口的类应用切面\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1、对实现了接口的类应用切面\"}},[a._v(\"#\")]),a._v(\" 1、对实现了接口的类应用切面\")]),a._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"images/img032.png\",alt:\"images\"}})]),a._v(\" \"),v(\"h2\",{attrs:{id:\"_2、对没实现接口的类应用切面\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2、对没实现接口的类应用切面\"}},[a._v(\"#\")]),a._v(\" 2、对没实现接口的类应用切面\")]),a._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"images/img033.png\",alt:\"images\"}})]),a._v(\" \"),v(\"p\",[v(\"RouterLink\",{attrs:{to:\"/pro004-Spring/lecture/chapter02/verse06.html\"}},[a._v(\"上一节\")]),a._v(\" \"),v(\"RouterLink\",{attrs:{to:\"/pro004-Spring/lecture/chapter02/index.html\"}},[a._v(\"回目录\")])],1)])}),[],!1,null,null,null);_.default=e.exports}}]);","extractedComments":[]}
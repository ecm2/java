{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{532:function(t,e,r){\"use strict\";r.r(e);var a=r(44),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"第一节-观察者模式\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#第一节-观察者模式\"}},[t._v(\"#\")]),t._v(\" 第一节 观察者模式\")]),t._v(\" \"),r(\"p\",[t._v(\"二十三种设计模式之一：\")]),t._v(\" \"),r(\"p\",[r(\"img\",{attrs:{src:\"images/img001.png\",alt:\"images\"}})]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"观察者：监控『被观察者』的行为，一旦发现『被观察者』触发了事件，就会调用事先准备好的方法执行操作。\")]),t._v(\" \"),r(\"li\",[t._v(\"被观察者：『被观察者』一旦触发了被监控的事件，就会被『观察者』发现。\")])]),t._v(\" \"),r(\"p\",[r(\"RouterLink\",{attrs:{to:\"/pro001-javaweb/lecture/chapter11/index.html\"}},[t._v(\"回目录\")]),t._v(\" \"),r(\"RouterLink\",{attrs:{to:\"/pro001-javaweb/lecture/chapter11/verse02.html\"}},[t._v(\"下一节\")])],1)])}),[],!1,null,null,null);e.default=s.exports}}]);","extractedComments":[]}